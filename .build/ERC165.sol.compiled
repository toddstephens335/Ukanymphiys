{"contracts":{"fs://e9e3bb797afd4999abdbd700fd1f4448/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."}},"version":1},"evm":{"assembly":"","bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"legacyAssembly":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"ewasm":{"wasm":""},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"fs://e9e3bb797afd4999abdbd700fd1f4448/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"fs://e9e3bb797afd4999abdbd700fd1f4448/ERC165.sol\":{\"keccak256\":\"0xeecb0072a3e41db470ab9f2d732dbb75ac0a3cd5a6d07b54bbd9ee0049b1c33c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://31a998f4918fde078b3a9512cd0cf044e312cd396667f38ab0a5e50c591e6abe\",\"dweb:/ipfs/QmV8yHzswGxEirf48kaBXs4xpxbJyhqt1bEq5wTEgBU3bx\"]},\"fs://e9e3bb797afd4999abdbd700fd1f4448/IERC165.sol\":{\"keccak256\":\"0xb2a074654994488c06d093cfb0fdb7f548bcfbfc463b9f586c95c866c76015c5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6823cd24a126c120d9a90609d5f9a1377e237ac4b3282d7dc50537d9594fbf41\",\"dweb:/ipfs/QmYPSJJhgyGPyZWkkFmEMZmjsoDtztvQ73U1Ku5mypT3Ps\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"fs://e9e3bb797afd4999abdbd700fd1f4448/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"assembly":"","bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"legacyAssembly":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"ewasm":{"wasm":""},"metadata":"{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"fs://e9e3bb797afd4999abdbd700fd1f4448/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"fs://e9e3bb797afd4999abdbd700fd1f4448/IERC165.sol\":{\"keccak256\":\"0xb2a074654994488c06d093cfb0fdb7f548bcfbfc463b9f586c95c866c76015c5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6823cd24a126c120d9a90609d5f9a1377e237ac4b3282d7dc50537d9594fbf41\",\"dweb:/ipfs/QmYPSJJhgyGPyZWkkFmEMZmjsoDtztvQ73U1Ku5mypT3Ps\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}}},"sources":{"fs://e9e3bb797afd4999abdbd700fd1f4448/ERC165.sol":{"ast":{"absolutePath":"fs://e9e3bb797afd4999abdbd700fd1f4448/ERC165.sol","exportedSymbols":{"ERC165":[23],"IERC165":[35]},"id":24,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"1339:23:0"},{"absolutePath":"fs://e9e3bb797afd4999abdbd700fd1f4448/IERC165.sol","file":"./IERC165.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":24,"sourceUnit":36,"src":"1364:23:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":35,"src":"1994:7:0"},"id":5,"nodeType":"InheritanceSpecifier","src":"1994:7:0"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"1389:576:0","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."},"fullyImplemented":true,"id":23,"linearizedBaseContracts":[23,35],"name":"ERC165","nameLocation":"1984:6:0","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[34],"body":{"id":21,"nodeType":"Block","src":"2160:64:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":19,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":14,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"2177:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":16,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"2197:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$35_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$35_$","typeString":"type(contract IERC165)"}],"id":15,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"2192:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":17,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2192:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$35","typeString":"type(contract IERC165)"}},"id":18,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"2192:25:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2177:40:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":13,"id":20,"nodeType":"Return","src":"2170:47:0"}]},"documentation":{"id":6,"nodeType":"StructuredDocumentation","src":"2008:56:0","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":22,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2078:17:0","nodeType":"FunctionDefinition","overrides":{"id":10,"nodeType":"OverrideSpecifier","overrides":[],"src":"2136:8:0"},"parameters":{"id":9,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8,"mutability":"mutable","name":"interfaceId","nameLocation":"2103:11:0","nodeType":"VariableDeclaration","scope":22,"src":"2096:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":7,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2096:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2095:20:0"},"returnParameters":{"id":13,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":22,"src":"2154:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11,"name":"bool","nodeType":"ElementaryTypeName","src":"2154:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2153:6:0"},"scope":23,"src":"2069:155:0","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":24,"src":"1966:260:0","usedErrors":[]}],"src":"1339:888:0"},"id":0},"fs://e9e3bb797afd4999abdbd700fd1f4448/IERC165.sol":{"ast":{"absolutePath":"fs://e9e3bb797afd4999abdbd700fd1f4448/IERC165.sol","exportedSymbols":{"IERC165":[35]},"id":36,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":25,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"1340:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":26,"nodeType":"StructuredDocumentation","src":"1365:279:1","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":35,"linearizedBaseContracts":[35],"name":"IERC165","nameLocation":"1655:7:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":27,"nodeType":"StructuredDocumentation","src":"1669:340:1","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":34,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2023:17:1","nodeType":"FunctionDefinition","parameters":{"id":30,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29,"mutability":"mutable","name":"interfaceId","nameLocation":"2048:11:1","nodeType":"VariableDeclaration","scope":34,"src":"2041:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":28,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2041:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2040:20:1"},"returnParameters":{"id":33,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":34,"src":"2084:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":31,"name":"bool","nodeType":"ElementaryTypeName","src":"2084:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2083:6:1"},"scope":35,"src":"2014:76:1","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":36,"src":"1645:447:1","usedErrors":[]}],"src":"1340:753:1"},"id":1}},"time":"1695914794245"}